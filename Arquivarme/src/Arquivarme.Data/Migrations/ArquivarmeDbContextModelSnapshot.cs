// <auto-generated />
using System;
using Arquivarme.Data.ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Arquivarme.Data.Migrations
{
    [DbContext(typeof(ArquivarmeDbContext))]
    partial class ArquivarmeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Arquivarme.Dominio.Models.CaixaArquivo", b =>
                {
                    b.Property<Guid>("CaixaArquivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Entrege")
                        .HasColumnType("bit");

                    b.HasKey("CaixaArquivoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("CaixaArquivo");
                });

            modelBuilder.Entity("Arquivarme.Dominio.Models.CapaArquivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GeolocalizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipoMovimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("GeolocalizacaoId");

                    b.HasIndex("TipoMovimentoId");

                    b.ToTable("CapaArquivo");
                });

            modelBuilder.Entity("Arquivarme.Dominio.Models.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Categorias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Arquivarme.Dominio.Models.Empresa", b =>
                {
                    b.Property<Guid>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("decimal(18,2)")
                        .HasMaxLength(10);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InscricaoEstadual")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InscricaoFederal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Numero")
                        .HasColumnType("decimal(18,2)")
                        .HasMaxLength(10);

                    b.Property<decimal>("TelCelular")
                        .HasColumnType("decimal(18,2)")
                        .HasMaxLength(15);

                    b.Property<decimal>("TelFixo")
                        .HasColumnType("decimal(18,2)")
                        .HasMaxLength(15);

                    b.HasKey("EmpresaId");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("Arquivarme.Dominio.Models.Geolocalizacao", b =>
                {
                    b.Property<Guid>("GeolocalizacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CodigoIBGE")
                        .HasColumnType("decimal(18,2)")
                        .HasMaxLength(15);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeolocalizacaoId");

                    b.ToTable("Geolocalizacao");
                });

            modelBuilder.Entity("Arquivarme.Dominio.Models.TipoMovimento", b =>
                {
                    b.Property<Guid>("TipoMovimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Moviento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoMovimentoId");

                    b.ToTable("TipoMovimento");
                });

            modelBuilder.Entity("Arquivarme.Dominio.Models.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CPF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Arquivarme.Dominio.Models.CaixaArquivo", b =>
                {
                    b.HasOne("Arquivarme.Dominio.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arquivarme.Dominio.Models.CapaArquivo", b =>
                {
                    b.HasOne("Arquivarme.Dominio.Models.Categoria", "Categoria")
                        .WithMany("CapaArquivo")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arquivarme.Dominio.Models.Empresa", "Empresa")
                        .WithMany("CapaArquivo")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arquivarme.Dominio.Models.Geolocalizacao", "Geolocalizacao")
                        .WithMany("CapaArquivo")
                        .HasForeignKey("GeolocalizacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arquivarme.Dominio.Models.TipoMovimento", "TipoMovimento")
                        .WithMany("CapaArquivo")
                        .HasForeignKey("TipoMovimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
